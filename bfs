from collections import deque
class Solution:
	def is_Possible(self, grid):
	    n=len(grid)
	    vis=[[0 for i in range(n)]for j in range(n)]
	    q=deque()
	    for i in range(n):
	        for j in range(n):
	            if grid[i][j]==1:
	                q.append([i,j])
	                vis[i][j]=1
	    while len(q)!=0:
	        arr=q.popleft()
	        i,j=arr[0],arr[1]
	        if grid[i][j]==2:
	            return True
	        if i-1>=0 and grid[i-1][j]!=0 and vis[i-1][j]==0:
	            q.append([i-1,j])
	            vis[i-1][j]=1
	        if i+1<n and grid[i+1][j]!=0 and vis[i+1][j]==0:
	            q.append([i+1,j])
	            vis[i+1][j]=1
	        if j-1>=0 and grid[i][j-1]!=0 and vis[i][j-1]==0:
	            q.append([i,j-1])
	            vis[i][j-1]=1
	        if j+1<n and grid[i][j+1]!=0 and vis[i][j+1]==0:
	            q.append([i,j+1])
	            vis[i][j+1]=1
	    return False
